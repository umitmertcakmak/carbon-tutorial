{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/umitmertcakmak/Documents/REP0S/carbon-tutorial/src/content/RepoPage/RepoTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableExpandHeader, TableHeader, TableBody, TableExpandRow, TableCell, TableExpandedRow } from 'carbon-components-react';\n\nconst RepoTable = ({\n  rows,\n  headers\n}) => {\n  const getRowDescription = rowId => {\n    const row = rows.find(({\n      id\n    }) => id === rowId);\n    return row ? row.description : '';\n  };\n\n  return __jsx(DataTable, {\n    rows: rows,\n    headers: headers,\n    render: ({\n      rows,\n      headers,\n      getHeaderProps,\n      getRowProps,\n      getTableProps\n    }) => __jsx(TableContainer, {\n      title: \"Carbon Repositories\",\n      description: \"A collection of public Carbon repositories.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Table, _extends({}, getTableProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), __jsx(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(TableExpandHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), headers.map(header => __jsx(TableHeader, _extends({}, getHeaderProps({\n      header\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), header.header)))), __jsx(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, rows.map(row => __jsx(React.Fragment, {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(TableExpandRow, _extends({}, getRowProps({\n      row\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), row.cells.map(cell => __jsx(TableCell, {\n      key: cell.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, cell.value))), __jsx(TableExpandedRow, {\n      colSpan: headers.length + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, getRowDescription(row.id)))))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n};\n\nexport default RepoTable;","map":{"version":3,"sources":["/Users/umitmertcakmak/Documents/REP0S/carbon-tutorial/src/content/RepoPage/RepoTable.js"],"names":["React","DataTable","TableContainer","Table","TableHead","TableRow","TableExpandHeader","TableHeader","TableBody","TableExpandRow","TableCell","TableExpandedRow","RepoTable","rows","headers","getRowDescription","rowId","row","find","id","description","getHeaderProps","getRowProps","getTableProps","map","header","cells","cell","value","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,iBANF,EAOEC,WAPF,EAQEC,SARF,EASEC,cATF,EAUEC,SAVF,EAWEC,gBAXF,QAYO,yBAZP;;AAcA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACvC,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjC,UAAMC,GAAG,GAAGJ,IAAI,CAACK,IAAL,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAYA,EAAE,KAAKH,KAA7B,CAAZ;AACA,WAAOC,GAAG,GAAGA,GAAG,CAACG,WAAP,GAAqB,EAA/B;AACD,GAHD;;AAKA,SACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEP,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,MAAM,EAAE,CAAC;AACPD,MAAAA,IADO;AAEPC,MAAAA,OAFO;AAGPO,MAAAA,cAHO;AAIPC,MAAAA,WAJO;AAKPC,MAAAA;AALO,KAAD,KAON,MAAC,cAAD;AACE,MAAA,KAAK,EAAC,qBADR;AAEE,MAAA,WAAW,EAAC,6CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,MAAC,KAAD,eAAWA,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGT,OAAO,CAACU,GAAR,CAAYC,MAAM,IACjB,MAAC,WAAD,eAAiBJ,cAAc,CAAC;AAAEI,MAAAA;AAAF,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGA,MAAM,CAACA,MADV,CADD,CAFH,CADF,CADF,EAWE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,IAAI,CAACW,GAAL,CAASP,GAAG,IACX,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,GAAG,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD,eAAoBG,WAAW,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGA,GAAG,CAACS,KAAJ,CAAUF,GAAV,CAAcG,IAAI,IACjB,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAI,CAACR,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BQ,IAAI,CAACC,KAA/B,CADD,CADH,CADF,EAME,MAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEd,OAAO,CAACe,MAAR,GAAiB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAId,iBAAiB,CAACE,GAAG,CAACE,EAAL,CAArB,CADF,CANF,CADD,CADH,CAXF,CAHF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4CD,CAlDD;;AAoDA,eAAeP,SAAf","sourcesContent":["import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n\nconst RepoTable = ({ rows, headers }) => {\n  const getRowDescription = rowId => {\n    const row = rows.find(({ id }) => id === rowId);\n    return row ? row.description : '';\n  };\n\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Carbon Repositories\"\n          description=\"A collection of public Carbon repositories.\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>{getRowDescription(row.id)}</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default RepoTable;\n"]},"metadata":{},"sourceType":"module"}